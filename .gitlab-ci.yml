image: openjdk:8-jdk

variables:
  TARGET_SDK: "O"
  ANDROID_SDK_VERSION: "25.2.5"
  GCLOUD_SDK_VERSION: "152.0.0"

  ANDROID_SDK_ROOT: "/opt/android-sdk"
  ANDROID_HOME: "${ANDROID_SDK_ROOT}"
  GCLOUD_SDK_ROOT: "/opt/google-cloud-sdk"
  APK_DIR: "${CI_PROJECT_DIR}/nirvana/build/outputs/apk"
  JACOCO_REPORT_DIR: "${CI_PROJECT_DIR}/nirvana/build/reports/jacoco/debug"

  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - assemble
  - test
  - coverage
  - release

.apt-get-packages: &apt-get-packages apt-get -qq update --yes && apt-get -qq install --yes wget unzip tar

# Jobs that require the Android SDK
.require-android-sdk: &require-android-sdk
  before_script:
    - *apt-get-packages
    # Install Android SDK
    - wget --quiet --output-document=/tmp/android-sdk.zip https://dl.google.com/android/repository/tools_r${ANDROID_SDK_VERSION}-linux.zip
    - unzip -q /tmp/android-sdk.zip -d ${ANDROID_SDK_ROOT}
    - mkdir -p ~/.android && echo "count=0" > ~/.android/repositories.cfg
    # Install "platforms;android-${TARGET_SDK}"
    - mkdir --parents ${ANDROID_SDK_ROOT}/licenses/ && touch ${ANDROID_SDK_ROOT}/licenses/android-sdk-license
    - echo 8933bad161af4178b1185d1a37fbf41ea5269c55 > ${ANDROID_SDK_ROOT}/licenses/android-sdk-license
    - ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager "platforms;android-${TARGET_SDK}"
    # Passwords and keys for signing and publishing
    - echo ${APK_SIGNING_INFORMATION} > ${CI_PROJECT_DIR}/keystore.properties
    - echo ${PLAY_PUBLISH_AUTH_KEY} > ${CI_PROJECT_DIR}/nirvana/play-publish-auth-key.json
  after_script:
    # Wipe the passwords and keys
    - rm ${CI_PROJECT_DIR}/keystore.properties ${CI_PROJECT_DIR}/nirvana/play-publish-auth-key.json

# Jobs that require the Google Cloud SDK
.require-google-cloud-sdk: &require-google-cloud-sdk
  before_script:
    - *apt-get-packages
    # Install Google Cloud SDK
    - wget --quiet --output-document=/tmp/gcloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz
    - tar --extract --file /tmp/gcloud-sdk.tar.gz --directory /opt
    # Authentication
    - echo $GCLOUD_PROJECT_AUTH_KEY > /tmp/$CI_PIPELINE_ID.json
    - ${GCLOUD_SDK_ROOT}/bin/gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
  after_script:
    # Wipe the authentication key
    - rm /tmp/$CI_PIPELINE_ID.json

# Jobs that run instrumental tests on Firebase
.run-firebase-instrumental-test: &run-firebase-instrumental-test
  dependencies:
    - assemble:debug
  script:
    - >
        ${GCLOUD_SDK_ROOT}/bin/gcloud firebase test android run --project nirvana-app --type instrumentation
        --app ${APK_DIR}/nirvana-debug.apk
        --test ${APK_DIR}/nirvana-debug-androidTest.apk
        --device model=${VIRTUAL_DEVICE},version=${API_LEVEL},locale=en,orientation=portrait
        --device model=${PHYSICAL_DEVICE},version=${API_LEVEL},locale=en,orientation=portrait

# Jobs that run robo tests on Firebase
.run-firebase-robo-test: &run-firebase-robo-test
  dependencies:
    - assemble:debug
  script:
    - >
        ${GCLOUD_SDK_ROOT}/bin/gcloud firebase test android run --project nirvana-app --type robo
        --app ${APK_DIR}/nirvana-debug.apk
        --device model=${VIRTUAL_DEVICE},version=${API_LEVEL},locale=en,orientation=portrait
        --device model=${PHYSICAL_DEVICE},version=${API_LEVEL},locale=en,orientation=portrait

# Assemble -debug.apk & -debug-androidTest.apk
assemble:debug:
  stage: assemble
  script:
    - ${CI_PROJECT_DIR}/gradlew assembleDebug assembleDebugAndroidTest
  artifacts:
    paths:
    - ${APK_DIR}
  <<: *require-android-sdk

# Run local unit tests
test:unit:
  stage: test
  script:
    - ${CI_PROJECT_DIR}/gradlew testDebugUnitTest jacocoTestReportDebug
  artifacts:
    paths:
      - ${JACOCO_REPORT_DIR}
  <<: *require-android-sdk

# Run instrumental tests on Firebase against API 24
test:instrumental:api24:
  stage: test
  variables:
    API_LEVEL: "24"
    VIRTUAL_DEVICE: "Nexus5X"
    PHYSICAL_DEVICE: "herolte"
  <<: *require-google-cloud-sdk
  <<: *run-firebase-instrumental-test

# Run instrumental tests on Firebase against API 25
test:instrumental:api25:
  stage: test
  variables:
    API_LEVEL: "25"
    VIRTUAL_DEVICE: "Nexus5X"
    PHYSICAL_DEVICE: "sailfish"
  <<: *require-google-cloud-sdk
  <<: *run-firebase-instrumental-test

# Run robo tests on Firebase against API 25
test:robo:api25:
  stage: test
  when: manual
  variables:
    API_LEVEL: "25"
    VIRTUAL_DEVICE: "Nexus5X"
    PHYSICAL_DEVICE: "sailfish"
  <<: *require-google-cloud-sdk
  <<: *run-firebase-robo-test

# Collect code coverage
jacoco:
  stage: coverage
  when: always
  dependencies:
    - test:unit
  script:
    - test -f "${JACOCO_REPORT_DIR}/index.html" && cat "${JACOCO_REPORT_DIR}/index.html"
  coverage: /'Total.*?([0-9]{1,3})%'/

# Release to Google Play alpha track
release:alpha:
  stage: release
  when: manual
  script:
    - ${CI_PROJECT_DIR}/gradlew clean assembleRelease publishApkRelease
  artifacts:
    paths:
    - ${APK_DIR}
  <<: *require-android-sdk
